<?xml version="1.0" encoding="UTF-8"?>
<Function Name="ST08B_TO_BYTES" Comment="this Function extracts the 8 BYTES from a 8-BYTE Struct">
	<Identification Standard="61499-1" Description="Copyright (c) 2024 HR Agrartechnik GmbH  &#10; &#10;This program and the accompanying materials are made  &#10;available under the terms of the Eclipse Public License 2.0  &#10;which is available at https://www.eclipse.org/legal/epl-2.0/  &#10; &#10;SPDX-License-Identifier: EPL-2.0">
	</Identification>
	<VersionInfo Organization="HR Agrartechnik GmbH" Version="1.0" Author="Franz HÃ¶pfinger" Date="2024-02-22">
	</VersionInfo>
	<CompilerInfo packageName="logiBUS::utils::conversion::str::forwarding">
		<Import declaration="logiBUS::utils::conversion::types::ST08B"/>
	</CompilerInfo>
	<InterfaceList>
		<EventInputs>
			<Event Name="REQ" Type="Event">
				<With Var="IN"/>
			</Event>
		</EventInputs>
		<EventOutputs>
			<Event Name="CNF" Type="Event">
				<With Var="OUT_00"/>
				<With Var="OUT_01"/>
				<With Var="OUT_02"/>
				<With Var="OUT_03"/>
				<With Var="OUT_04"/>
				<With Var="OUT_05"/>
				<With Var="OUT_06"/>
				<With Var="OUT_07"/>
			</Event>
		</EventOutputs>
		<InputVars>
			<VarDeclaration Name="IN" Type="logiBUS::utils::conversion::types::ST08B" Comment="ST08B Input"/>
		</InputVars>
		<OutputVars>
			<VarDeclaration Name="OUT_00" Type="BYTE" Comment="BYTE 00"/>
			<VarDeclaration Name="OUT_01" Type="BYTE" Comment="BYTE 01"/>
			<VarDeclaration Name="OUT_02" Type="BYTE" Comment="BYTE 02"/>
			<VarDeclaration Name="OUT_03" Type="BYTE" Comment="BYTE 03"/>
			<VarDeclaration Name="OUT_04" Type="BYTE" Comment="BYTE 04"/>
			<VarDeclaration Name="OUT_05" Type="BYTE" Comment="BYTE 05"/>
			<VarDeclaration Name="OUT_06" Type="BYTE" Comment="BYTE 06"/>
			<VarDeclaration Name="OUT_07" Type="BYTE" Comment="BYTE 07"/>
		</OutputVars>
	</InterfaceList>
	<FunctionBody>
		<ST><![CDATA[PACKAGE logiBUS::utils::conversion::str::forwarding;

IMPORT logiBUS::utils::conversion::types::ST08B;

(* this Function extracts the 8 BYTES from a 8-BYTE Struct *)
FUNCTION ST08B_TO_BYTES

VAR_INPUT
	IN : ST08B; // ST08B Input
END_VAR

VAR_OUTPUT
	OUT_00 : BYTE; // BYTE 00
	OUT_01 : BYTE; // BYTE 01
	OUT_02 : BYTE; // BYTE 02
	OUT_03 : BYTE; // BYTE 03
	OUT_04 : BYTE; // BYTE 04
	OUT_05 : BYTE; // BYTE 05
	OUT_06 : BYTE; // BYTE 06
	OUT_07 : BYTE; // BYTE 07
END_VAR

OUT_00 := IN.B_00;
OUT_01 := IN.B_01;
OUT_02 := IN.B_02;
OUT_03 := IN.B_03;
OUT_04 := IN.B_04;
OUT_05 := IN.B_05;
OUT_06 := IN.B_06;
OUT_07 := IN.B_07;

END_FUNCTION
]]></ST>
	</FunctionBody>
</Function>
